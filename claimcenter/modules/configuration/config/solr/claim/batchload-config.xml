<?xml version="1.0"?>

<!-- Archived claim does not use batch loader, this is a place holder -->

<document
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="solr-batchload-config.xsd"
  version="1">

  <param name="appPrefix" value="cc"/>

  <!--
  If the debug param is set to true, then all intermediate files in the WorkDir are not deleted.
  See the log4j2.xml file to modify the general logging level.
  -->
  <param name="debug" value="false"/>

  <param name="solrRoot" value="/opt/gwsolr"/>
  <param name="documentRoot" value="${solrRoot}/cc/solr/claim_active"/>

  <!--
  If the Solr Batch Loader is run from within the Guidewire app (ClaimCenter,
  PolicyCenter, etc.), the location of the solrServerConfigFile
  param is taken from the Guidewire app, not from the parameter below and the
  value for the absolutePathToWorkDir param is determined from the contents of
  that file, not from the parameter below.
  -->
  <param name="solrServerConfigFile" value="${documentRoot}/conf/solrserver-config.xml"/>
  <param name="absolutePathToWorkDir" value="${documentRoot}/workDir"/>

  <!--
  The parameter absolutePathToSortExe specifies what sort facility the
  SolrBatchLoader should use. You can either specify the literal "internalSort"
  or an absolute path to an external sort utility:

  1.) internalSort : this will cause the SolrBatchLoader to use an in-memory
  Java-based sort facility. This option should be used only in development/demo
  mode where the number of entity rows to be fetched by the batch loader is less
  than 10000 (if you exceed 10000 rows, the batch loader will throw an exception).

  2.) <abolute_path_to_an_external_sort_utility> : this will cause the
  SolrBatchLoader to use an external, high-performance sort utility. This option
  should be used in production mode. On Unix/Linux the sort utility is typically
  located at /usr/bin/sort. On Windows, Guidewire only supports the Cygwin sort
  utility (you must download and install Cygwin). Typically, the Cygwin sort
  utility is located at c:\cygwin\bin\sort.exe. Be sure to include the .exe
  extension in the value of absolutePathToSortExe if you are specifying the
  location of the sort utility on Windows.
  -->
  <param name="absolutePathToSortExe" value="internalSort"/>
  <param name="sortType" value="numeric"/>

  <!--
  The four parameters, sortFieldArgStyle, entitySortMemSize, mvFieldSortMemSize, and absolutePathToSortTmpDir, are
  enabled only if you are using an external sort utility.
  -->
  <param name="sortFieldArgStyle" value="posix"/>
  <param name="entitySortMemSize" value="2G"/>
  <param name="mvFieldSortMemSize" value="1G"/>
  <param name="absolutePathToSortTmpDir" value="${documentRoot}/workDir/sortTmpDir"/>

  <!--
  The list of transforms (as defined in the <transformer> elements; see below)
  gets applied to the stream of documents coming out of the last joiner. The
  application of these transforms to any one document is independent of their application
  to all other documents. So, the stream of documents can be partitioned and the list of
  transforms can be applied in parallel to each partition. The following parameter
  specifies how many partitions and separate threads should be created to do the
  transforming. In order to run multiple transformer threads, ALL TRANSFORMER CLASSES
  MUST BE THREAD SAFE. In particular, since the input line and the transformed
  output line are in XML and XML parsing and formatting are not thread safe, you must
  allocate separate parsers and formatters for each instance of a transformer. In other
  words, your transformer should not share static resources unless you are sure they
  are read-only/immutable. Serializing access to shared static resources will just degrade
  performance. The maximum number of transform threads is 10.
  -->
  <param name="numTransformThreads" value="3"/>

  <!--
  When disableSolrDataImport is false (the default), Solr is contacted automatically to process the
  generated XML document and load it as the new index.
  
  Set this property to true if you wish to only generate the bulkload file from SQL but are not yet
  ready to load it into Solr.  Use the DataImport page for the associated Solr Core, viewable
  in the Solr Admin UI at http://SOLR_HOST:8983/solr/#/ to have Solr load the file when ready.
  
  IMPORTANT: To avoid errors in the index, make sure the corresponding Solr message destination
  remains suspended until this file has been loaded (or discarded).  Otherwise you may have to
  regenerate the file to ensure the resulting index is correct and complete.
  -->
  <param name="disableSolrDataImport" value="false"/>

  <!--
  If the Solr Batch Loader is run from within the Guidewire app (ClaimCenter,
  PolicyCenter, etc.), the settings in the following <dataSource> element are
  overridden by the settings in the <database> element in config.xml or
  config-override.xml.
  -->
  <dataSource name="ds_h2" driver="org.h2.Driver" url="jdbc:h2:file:./tmp/cc;AUTO_SERVER=true;user=;password="/>
  <!--
  <dataSource name="ds_orcl" driver="oracle.jdbc.OracleDriver" url="jdbc:oracle:thin:USER/PASSWORD@//HOST:PORT/SERVICENAME"/>
  <dataSource name="ds_sqlserver" driver="com.microsoft.sqlserver.jdbc.SQLServerDriver" url="jdbc:sqlserver://HOST:PORT;databaseName=DATABASENAME;user=USER;password=PASSWORD"/>
  <dataSource name="ds_postgresql" driver="org.postgresql.Driver" url="jdbc:postgresql://HOST:PORT/DATABASENAME?user=USER&amp;password=PASSWORD"/>
  -->

  <!-- Uncomment the following element to run a post-processor.-->
  <!--
    <postprocessor
      name="postProcessor"
      absolutePathToPostprocessorExe="${documentRoot}/conf/postprocess.sh"
    />
    -->
</document>